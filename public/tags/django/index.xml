<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Django on Atharva Shah</title>
    <link>https://atharvashah.netlify.app/tags/django/</link>
    <description>Recent content in Django on Atharva Shah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 May 2023 23:20:34 +0530</lastBuildDate><atom:link href="https://atharvashah.netlify.app/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django Crypto App Part 3: Wrap-Up and Testing</title>
      <link>https://atharvashah.netlify.app/tech/django-crypto-app/part3/</link>
      <pubDate>Mon, 01 May 2023 23:20:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/tech/django-crypto-app/part3/</guid>
      <description>Introduction Test Driven Development Approach Explained URL Testing Model Testing View Testing Writing Tests Testing URLS Testing Models Testing Views How to Run Tests Conclusion Introduction Welcome to the final part of the 3-part technical tutorial series, where have been building a Django project that enables users to manage their cryptocurrency portfolios. To implement the functionalities and additional features, we&amp;rsquo;ll be utilizing API calls to coingecko or any other cryptocurrency API.</description>
    </item>
    
    <item>
      <title>Django Crypto App Part 2: Templates, Views and URLs</title>
      <link>https://atharvashah.netlify.app/tech/django-crypto-app/part2/</link>
      <pubDate>Mon, 01 May 2023 23:19:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/tech/django-crypto-app/part2/</guid>
      <description>Introduction Setting up the URLs Setting Up Templates Setting Up Views Signup Login Screen Forgot Password Page Password Reset Email Password Reset Success Home Page Add Currency / Search Result Page Wallet Page Run the crypto app Conclusion Introduction Welcome to the second part of the 3-part technical tutorial series, where we&amp;rsquo;ll be building a Django project that enables users to manage their cryptocurrency portfolios. To implement the functionalities and additional features, we&amp;rsquo;ll be utilizing API calls to coingecko or any other cryptocurrency API.</description>
    </item>
    
    <item>
      <title>Django Crypto App Part 1: Functional Requirements and Setup</title>
      <link>https://atharvashah.netlify.app/tech/django-crypto-app/part1/</link>
      <pubDate>Mon, 01 May 2023 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/tech/django-crypto-app/part1/</guid>
      <description>Table of contents Table of contents Introduction Defining Functional Requirements Tech Stack Planned Endpoints Creating a New Django Project Configuring settings.py Configuring urls.py Create App Models Registering Models in Admin Conclusion Introduction Welcome to this 3-part technical tutorial series, where we&amp;rsquo;ll be building a Django project that enables users to manage their cryptocurrency portfolios. To implement the functionalities and additional features, we&amp;rsquo;ll be utilizing API calls to coingecko or any other cryptocurrency API.</description>
    </item>
    
    <item>
      <title>Ultimate Django ORM Cheatsheet &#43; Exercises</title>
      <link>https://atharvashah.netlify.app/tech/django-orm-exercises/</link>
      <pubDate>Sun, 19 Feb 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/tech/django-orm-exercises/</guid>
      <description>Querying Django Models with Examples Terminology Models Used in the Examples QuerySet API Exercises Query 1: Fetching all books from the database Query 2: Fetching selected columns from the Books table Query 3: Filtering records based on a condition Query 4: Filtering records based on multiple conditions Query 5: Searching records based on a substring Query 6: Retrieve authors with specific primary keys Query 7: Retrieve authors who joined after a specific date Query 8: Retrieve distinct publisher last name Query 9: Retrieve the latest joined author and the earliest joined publisher Query 10: Retrieve the first name, last name, and join date of the most recently joined author Query 11: Retrieve Authors Joined After 2013 Query 12: Calculate Total Price of Books Written by Popular Authors Query 13: Retrieve Titles of Books Written by Authors with &amp;lsquo;a&amp;rsquo; in their Firstname Query 14: Calculate Average Book Price of Selected Authors Query 15: Retrieve first name of authors and their recommended author&amp;rsquo;s first name Query 16: Retrieve authors whose books are published by a specific publisher Query 17: Add followers to an author Query 18: Set followers for an author Query 19: Add a follower to an author Query 20: Remove a follower from an author Query 21: Retrieve the first names of all authors followed by the user with primary key (pk) equal to 1 Query 22: Retrieve all authors who have books with titles containing the string &amp;ldquo;tle&amp;rdquo; Query 23: Retrieve all authors whose first name starts with the letter &amp;ldquo;a&amp;rdquo; and either have a popularity score greater than 5 or joined the platform after the year 2014 Query 24: Retrieve the author with primary key (pk) equal to 1 Query 25: Retrieve the first 10 authors in the database Query 26: Retrieve the first and last author in the database with a popularity score of 7 Query 27: Retrieve all authors whose joindate year is greater than or equal to 2012, popularity_score is greater than or equal to 4, joindate day is greater than or equal to 12, and firstname starts with &amp;lsquo;a&amp;rsquo; Query 28: Retrieve all authors whose joindate year is not equal to 2012 Query 29: Retrieve the oldest joindate among all authors, the newest joindate among all authors, the average popularity_score of all authors, and the sum of price of all books Query 30: Retrieve all authors who have not been recommended by anyone Query 31: Retrieve all books that have an author, and all books that have an author who has not been recommended by anyone Query 32: Calculate the sum of the price of all books authored by the author with primary key (pk) equal to 1 Query 33: Retrieve the title of the most recently published book Query 34: Calculate the average price of all books Query 35: Calculate the maximum popularity score of all the publishers that have published a book written by the author with primary key 1 Query 36: Count Authors with Books containing &amp;lsquo;ab&amp;rsquo; in the title Query 37: Filter Authors by Number of Followers Query 38: Average Popularity Score of Authors who joined after 20th Sep 2014 Query 39: Filter Books by Authors who have written more than 10 Books Query 40: Filter Books by Title Count Conclusion Querying Django Models with Examples In Django, querying the database is an essential task when working with models.</description>
    </item>
    
  </channel>
</rss>
