<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>üìöAll Posts on Atharva Shah</title>
    <link>https://atharvashah.netlify.app/</link>
    <description>Recent content in üìöAll Posts on Atharva Shah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Jun 2023 00:19:34 +0530</lastBuildDate><atom:link href="https://atharvashah.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Manga Review: BLAME! by Tsutomu Nihei</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-review/blame-manga-review/</link>
      <pubDate>Tue, 27 Jun 2023 00:19:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-review/blame-manga-review/</guid>
      <description>Thoughts on all six of the master edition volumes of the BLAME! manga series by Tsutomu Nihei. A dark, violent, brutal, fast-paced cyberpunk battle manga.</description>
    </item>
    
    <item>
      <title>A Comprehensive Guide to Testing Django Applications</title>
      <link>https://atharvashah.netlify.app/posts/tech/django-testing-guide/</link>
      <pubDate>Sat, 24 Jun 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/django-testing-guide/</guid>
      <description>Best Practices and Strategies for Testing Django Applications. Everything from setting up the testing environment to mastering unit testing, integration testing, and end-to-end testing.</description>
    </item>
    
    <item>
      <title>June 2023 Movies: Summer Cinema</title>
      <link>https://atharvashah.netlify.app/posts/personal/movie-review/june-2023/</link>
      <pubDate>Sun, 18 Jun 2023 00:00:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/movie-review/june-2023/</guid>
      <description>June 2023 has been an exciting month for cinema enthusiasts like myself, as I indulged in a diverse selection of films across various genres.</description>
    </item>
    
    <item>
      <title>Sales Data Analysis with Python</title>
      <link>https://atharvashah.netlify.app/posts/tech/sales-data-analysis/</link>
      <pubDate>Wed, 14 Jun 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/sales-data-analysis/</guid>
      <description>Through a combination of theoretical explanations and practical demonstrations, we will delve into data preprocessing, exploratory data analysis, feature engineering, and model building.</description>
    </item>
    
    <item>
      <title>Album Review: Foghorn in the Dawn by Ïò§ÎØ∏ÏùºÍ≥± [Omilgop]</title>
      <link>https://atharvashah.netlify.app/posts/personal/music-review/foghorn-in-dawn/</link>
      <pubDate>Wed, 14 Jun 2023 00:18:34 +0531</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/music-review/foghorn-in-dawn/</guid>
      <description>Embark on an ethereal journey as Ïò§ÎØ∏ÏùºÍ≥± [Omilgop] unveils their mesmerizing opus, Foghorn in the Dawn.</description>
    </item>
    
    <item>
      <title>Album Review: Demon Days by Gorillaz</title>
      <link>https://atharvashah.netlify.app/posts/personal/music-review/demon-days/</link>
      <pubDate>Mon, 12 Jun 2023 00:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/music-review/demon-days/</guid>
      <description>An album review for Demon Days by Gorillaz. A wild ride of a record.</description>
    </item>
    
    <item>
      <title>Album Review: Loveless by My Bloody Valentine</title>
      <link>https://atharvashah.netlify.app/posts/personal/music-review/loveless-mbv/</link>
      <pubDate>Mon, 12 Jun 2023 00:18:34 +0531</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/music-review/loveless-mbv/</guid>
      <description>An album review for Loveless by My Bloody Valentine. A masterpiece of shoegaze and dream pop.</description>
    </item>
    
    <item>
      <title>Album Review: Plastic Beach by Gorillaz</title>
      <link>https://atharvashah.netlify.app/posts/personal/music-review/plastic-beach/</link>
      <pubDate>Mon, 12 Jun 2023 00:18:34 +0532</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/music-review/plastic-beach/</guid>
      <description>An album review for Plastic Beach by Gorillaz. An entertaining record from the virtual band.</description>
    </item>
    
    <item>
      <title>Album Review: Stratosphere by Duster</title>
      <link>https://atharvashah.netlify.app/posts/personal/music-review/stratosphere/</link>
      <pubDate>Mon, 12 Jun 2023 00:18:34 +0533</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/music-review/stratosphere/</guid>
      <description>An album review for Stratosphere by Duster. An idyllic journey through the great outdoors.</description>
    </item>
    
    <item>
      <title>Digital Product Series Launch!</title>
      <link>https://atharvashah.netlify.app/posts/tech/gumroad-dsa-announcement/</link>
      <pubDate>Mon, 05 Jun 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/gumroad-dsa-announcement/</guid>
      <description>Boost your interview success with our exclusive digital product series! Most asked Python Interview questions (Data Structures and Algorithms) are now available on Gumroad!</description>
    </item>
    
    <item>
      <title>Best Quotes from Gothic Violence by Mika Ma</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-gothic-violence-by-mike-ma/</link>
      <pubDate>Sun, 04 Jun 2023 02:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-gothic-violence-by-mike-ma/</guid>
      <description>A few notable quotes from the wild and wondeful mind of Mike Ma in his book Gothic Violence.</description>
    </item>
    
    <item>
      <title>Best Quotes from Harassment Architechture by Mika Ma</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-harassment-architechture-by-mike-ma/</link>
      <pubDate>Sun, 04 Jun 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-harassment-architechture-by-mike-ma/</guid>
      <description>Some of the most insane quotes from Harassment Architechture by Mika Ma, a book that has no boundries. Purely cynical.</description>
    </item>
    
    <item>
      <title>May 2023 Movies: Blockbuster Bonanza</title>
      <link>https://atharvashah.netlify.app/posts/personal/movie-review/may-2023/</link>
      <pubDate>Thu, 25 May 2023 00:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/movie-review/may-2023/</guid>
      <description>The month of May brought forth an array of highly anticipated films, and while my movie-watching endeavors were limited, the experiences I had were truly captivating.</description>
    </item>
    
    <item>
      <title>Setting Up CI/CD to Netlify for Static Sites via Github</title>
      <link>https://atharvashah.netlify.app/posts/tech/netlify-ci-cd/</link>
      <pubDate>Wed, 03 May 2023 19:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/netlify-ci-cd/</guid>
      <description>A step-by-step beginner friendly guide to setting up CI/CD to Netlify for static sites like Hugo, Jekyll, etc. Code snippets for Github actions included.</description>
    </item>
    
    <item>
      <title>A Critical Analysis of Pulp Fiction</title>
      <link>https://atharvashah.netlify.app/posts/personal/critical-analysis-pulp-fiction/</link>
      <pubDate>Tue, 02 May 2023 19:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/critical-analysis-pulp-fiction/</guid>
      <description>Reviewing my favorite movie of all time - Pulp Fiction by Quentin Tarantino starring John Travolta, Samuel L. Jackson, Uma Thurman, Bruce Willis.</description>
    </item>
    
    <item>
      <title>Django Crypto App Part 3</title>
      <link>https://atharvashah.netlify.app/posts/tech/django-crypto-app/part3/</link>
      <pubDate>Mon, 01 May 2023 23:20:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/django-crypto-app/part3/</guid>
      <description>Here, we will be defining the functional requirements and give you the overview of what we are building, the approach, the high-level design and the project setup using Django.</description>
    </item>
    
    <item>
      <title>Django Crypto App Part 2</title>
      <link>https://atharvashah.netlify.app/posts/tech/django-crypto-app/part2/</link>
      <pubDate>Mon, 01 May 2023 23:19:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/django-crypto-app/part2/</guid>
      <description>Here, we will be defining the functional requirements and give you the overview of what we are building, the approach, the high-level design and the project setup using Django.</description>
    </item>
    
    <item>
      <title>Django Crypto App Part 1</title>
      <link>https://atharvashah.netlify.app/posts/tech/django-crypto-app/part1/</link>
      <pubDate>Mon, 01 May 2023 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/django-crypto-app/part1/</guid>
      <description>Here, we will be defining the functional requirements and give you the overview of what we are building, the approach, the high-level design and the project setup using Django.</description>
    </item>
    
    <item>
      <title>Book Review: Deadhouse Gates by Steven Erikson</title>
      <link>https://atharvashah.netlify.app/posts/personal/malazan/02-dg-review/</link>
      <pubDate>Thu, 27 Apr 2023 00:19:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/malazan/02-dg-review/</guid>
      <description>Rising rebellions, ancient secrets, and an Empire on the brink of war. The second book in the Malazan Book of the Fallen series is a thrilling and tragic tale of war and its consequences.</description>
    </item>
    
    <item>
      <title>Book Review: Gardens of the Moon by Steven Erikson</title>
      <link>https://atharvashah.netlify.app/posts/personal/malazan/01-gotm-review/</link>
      <pubDate>Wed, 26 Apr 2023 00:19:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/malazan/01-gotm-review/</guid>
      <description>The Gardens of the Moon, the first volume of the Malazan Book of the Fallen, is a sprawling epic fantasy of monumental proportions.</description>
    </item>
    
    <item>
      <title>April 2023 Movies: Spring Screenings</title>
      <link>https://atharvashah.netlify.app/posts/personal/movie-review/april-2023/</link>
      <pubDate>Sun, 16 Apr 2023 00:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/movie-review/april-2023/</guid>
      <description>April 2023 was an exciting month for movie enthusiasts, with a variety of genres and eras represented in the films released and viewed.</description>
    </item>
    
    <item>
      <title>The Best Quotes from H.P. Lovecraft</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-h.p.-lovecraft/</link>
      <pubDate>Fri, 14 Apr 2023 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-h.p.-lovecraft/</guid>
      <description>Favorite Quotes from the mind of H.P. Lovecraft. Everything from Eldritch Monsters to the Necronomicon, we have them all.</description>
    </item>
    
    <item>
      <title>March 2023 Movies: Magic and Melodrama</title>
      <link>https://atharvashah.netlify.app/posts/personal/movie-review/march-2023/</link>
      <pubDate>Tue, 28 Mar 2023 00:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/movie-review/march-2023/</guid>
      <description>A month filled with movie magic, and I had the pleasure of watching some truly amazing films.</description>
    </item>
    
    <item>
      <title>Awesome Youtube Channels I am Subscribed To</title>
      <link>https://atharvashah.netlify.app/posts/personal/lists/list-favorite-youtube-channels/</link>
      <pubDate>Mon, 20 Mar 2023 01:18:35 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/lists/list-favorite-youtube-channels/</guid>
      <description>A perpetually growing list of youtube channels I am subscribed to. All of them are awesome.</description>
    </item>
    
    <item>
      <title>Awesome Podcasts I am Listening To</title>
      <link>https://atharvashah.netlify.app/posts/personal/lists/list-favorite-podcasts/</link>
      <pubDate>Mon, 20 Mar 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/lists/list-favorite-podcasts/</guid>
      <description>A perpetually growing list of podcasts I am listening to. All of them are awesome. Insightful,entertaining and eye-opening.</description>
    </item>
    
    <item>
      <title>Prelude to Malazan Book of the Fallen Challenge</title>
      <link>https://atharvashah.netlify.app/posts/personal/malazan/prelude-to-malazan-challenge/</link>
      <pubDate>Sat, 18 Mar 2023 00:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/malazan/prelude-to-malazan-challenge/</guid>
      <description>Opening thoughts and ponderings before taking on the humungous Malazan Book of the Fallen series. Setting expectations and challenges before embarking on a fantasy adventure.</description>
    </item>
    
    <item>
      <title>February 2023 Movies: Love and the Big Screen</title>
      <link>https://atharvashah.netlify.app/posts/personal/movie-review/february-2023/</link>
      <pubDate>Mon, 27 Feb 2023 00:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/movie-review/february-2023/</guid>
      <description>February was a month for the ages as I indulged in a smorgasbord of movies. Consumed movies across a ton of genres.</description>
    </item>
    
    <item>
      <title>Ultimate Django ORM Cheatsheet &#43; Exercises</title>
      <link>https://atharvashah.netlify.app/posts/tech/django-orm-exercises/</link>
      <pubDate>Sun, 19 Feb 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/django-orm-exercises/</guid>
      <description>Master the basics of Django ORM with this comprehensive cheatsheet and exercises to level up your skills in database querying, model relationships, aggregations, annotations, and more.</description>
    </item>
    
    <item>
      <title>UML Diagrams with ChatGPT: Step-by-Step Tutorial</title>
      <link>https://atharvashah.netlify.app/posts/tech/uml-diagrams-with-chatgpt/</link>
      <pubDate>Wed, 15 Feb 2023 01:19:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/uml-diagrams-with-chatgpt/</guid>
      <description>5 Step process to use ChatGPT to generate UML diagrams for your projects in just a few clicks. Easy to follow instructions with visual illustrations.</description>
    </item>
    
    <item>
      <title>January 2023 Movies: Toppling My Winter Watchlist</title>
      <link>https://atharvashah.netlify.app/posts/personal/movie-review/january-2023/</link>
      <pubDate>Sat, 28 Jan 2023 00:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/movie-review/january-2023/</guid>
      <description>January 2023 brought a plethora of cinematic experiences my way, and I&amp;#39;m eager to share my take on them. From classic films to new releases, my viewing journey was diverse and exciting.</description>
    </item>
    
    <item>
      <title>What I am Learning in 2023</title>
      <link>https://atharvashah.netlify.app/posts/tech/what-i-am-learning-2023/</link>
      <pubDate>Fri, 27 Jan 2023 01:19:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/what-i-am-learning-2023/</guid>
      <description>Diving into the Latest Developments in React.js, Docker, AWS, Django and FastAPI. My personal goals for the year along with topic breakup.</description>
    </item>
    
    <item>
      <title>Accelerating into the Future: e/acc Ruminations</title>
      <link>https://atharvashah.netlify.app/posts/tech/effective-accelerationism/</link>
      <pubDate>Fri, 27 Jan 2023 01:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/effective-accelerationism/</guid>
      <description>A long form essay on Navigating the Intersection of Technology and Humanity through the Lens of Accelerationism.</description>
    </item>
    
    <item>
      <title>Celebrating victory at CRIF Hackathon 2023</title>
      <link>https://atharvashah.netlify.app/posts/tech/crif-hackathon-2023/</link>
      <pubDate>Thu, 26 Jan 2023 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/crif-hackathon-2023/</guid>
      <description>Developer experience at CRIF Hackathon 2023. We built a News Media Analysis Utility leveraging NLP, Text Processing, and Visualization with Tableau.</description>
    </item>
    
    <item>
      <title>Best Quotes from First Law Trilogy</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-first-law-trilogy-by-joe-abercrombie/</link>
      <pubDate>Mon, 11 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-first-law-trilogy-by-joe-abercrombie/</guid>
      <description>Favorite Quotes from First Law Trilogy by Joe Abercrombie. A grimdark collection that will take you to the edge of your seat.</description>
    </item>
    
    <item>
      <title>Best Quotes from Nevernight Trilogy</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-nevernight-trilogy-by-jay-kristoff/</link>
      <pubDate>Mon, 11 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-nevernight-trilogy-by-jay-kristoff/</guid>
      <description>Favorite Quotes from Nevernight Trilogy by Jay Kristoff. A blood-curdling, brutalist masterpiece.</description>
    </item>
    
    <item>
      <title>Best Quotes from Realm of the Elderlings</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-realm-of-the-elderlings-by-robin-hobb/</link>
      <pubDate>Mon, 11 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-realm-of-the-elderlings-by-robin-hobb/</guid>
      <description>Favorite Quotes from Realm of the Elderlings by Robin Hobb. All the trilogies and the charm all in one place.</description>
    </item>
    
    <item>
      <title>Best Quotes from Sandman (Neil Gaiman)</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-sandman-graphic-novel-by-neil-gaiman/</link>
      <pubDate>Mon, 11 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-sandman-graphic-novel-by-neil-gaiman/</guid>
      <description>Favorite Quotes from Sandman (Graphic Novel) volumes written by the master Neil Gaiman.</description>
    </item>
    
    <item>
      <title>Best Quotes from The Witcher</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-witcher-series-by-andrzej-sapkowski/</link>
      <pubDate>Mon, 11 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-witcher-series-by-andrzej-sapkowski/</guid>
      <description>A treasure trove of favorite quotes from The Witcher series by Andrzej Sapkowski. Covers all the seven books with Geralt of Rivia, Yenna, and Ciri.</description>
    </item>
    
    <item>
      <title>Best Quotes from Watchmen (Alan Moore)</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-watchmen-graphic-novel-by-alan-moore/</link>
      <pubDate>Mon, 11 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-watchmen-graphic-novel-by-alan-moore/</guid>
      <description>Favorite Quotes from Watchmen (Graphic Novel) by Alan Moore. Who watches the watchmen?</description>
    </item>
    
    <item>
      <title>Best Quotes from Book of the Ancestors</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-book-of-the-ancestors-trilogy-by-mark-lawrence/</link>
      <pubDate>Sun, 10 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-book-of-the-ancestors-trilogy-by-mark-lawrence/</guid>
      <description>Favorite Quotes from Book of the Ancestors Trilogy by Mark Lawrence. A book is as dangerous as any journey you might take.</description>
    </item>
    
    <item>
      <title>Best Quotes from Broken Empire Trilogy</title>
      <link>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-broken-empire-trilogy-by-mark-lawrence/</link>
      <pubDate>Sun, 10 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/personal/book-quotes/the-best-quotes-from-broken-empire-trilogy-by-mark-lawrence/</guid>
      <description>Favorite Quotes from Broken Empire Trilogy by Mark Lawrence. War, my friends, is a thing of beauty. Those as says otherwise are losing.</description>
    </item>
    
    <item>
      <title>DSA in Python - Dynamic Programming</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/dp/</link>
      <pubDate>Sun, 10 Jul 2022 13:11:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/dp/</guid>
      <description>Free Preview - 5 Dynamic Programming Problems Coin ChangeProblem &amp;#34;&amp;#34;&amp;#34; Given an unlimited supply of coins of given denominations, find the total number of distinct ways to get the desired change. For example, Input: S = { 1, 3, 5, 7 }, target = 8 The total number of ways is 6 { 1, 7 } { 3, 5 } { 1, 1, 3, 3 } { 1, 1, 1, 5 } { 1, 1, 1, 1, 1, 3 } { 1, 1, 1, 1, 1, 1, 1, 1 } Input: S = { 1, 2, 3 }, target = 4 The total number of ways is 4 { 1, 3 } { 2, 2 } { 1, 1, 2 } { 1, 1, 1, 1 } &amp;#34;&amp;#34;&amp;#34; def count(S, n, target): if target == 0: return 1 # return 0 (solution does not exist) if total becomes negative, no elements are left if target &amp;lt; 0 or n &amp;lt; 0: return 0 # Case 1.</description>
    </item>
    
    <item>
      <title>DSA in Python - Elementry Algos</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/elementry-algos/</link>
      <pubDate>Sat, 09 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/elementry-algos/</guid>
      <description>Free Preview - 5 Elementary Problems Check Leap Year year = 2000 # divided by 100 means century year (ending with 00) century year divided by 400 is leap year if (year % 400 == 0) and (year % 100 == 0): print(&amp;#34;{0} is a leap year&amp;#34;.format(year)) # not divided by 100 means not a century year year divided by 4 is a leap year elif (year % 4 ==0) and (year % 100 !</description>
    </item>
    
    <item>
      <title>DSA in Python - Graph</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/graph/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/graph/</guid>
      <description>Free Preview - 5 Graph Problems Implement Graph class Graph: def __init__(self, edges, n): self.adjList = [[] for _ in range(n)] for (src, dest) in edges: self.adjList[src].append(dest) def printGraph(graph): for src in range(len(graph.adjList)): for dest in graph.adjList[src]: print(f&amp;#39;({src} ‚Äî&amp;gt; {dest}) &amp;#39;, end=&amp;#39;&amp;#39;) print() edges = [(0, 1), (1, 2), (2, 0), (2, 1), (3, 2), (4, 5), (5, 4)] n = 6 graph = Graph(edges, n) printGraph(graph) Implement Weighted Graph class Graph: def __init__(self, edges, n): self.</description>
    </item>
    
    <item>
      <title>DSA in Python - Greedy</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/greedy/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/greedy/</guid>
      <description>Free Preview - 5 Greedy Problems Activity Selection Problem &amp;#34;&amp;#34;&amp;#34; There is one meeting room in a firm. There are N meetings in the form of (start[i], end[i]) where start[i] is start time of meeting i and end[i] is finish time of meeting i. What is the maximum number of meetings that can be accommodated in the meeting room when only one meeting can be held in the meeting room at a particular time?</description>
    </item>
    
    <item>
      <title>DSA in Python - Heap</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/heap/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/heap/</guid>
      <description>Free Preview - 5 Heap Problems Implement a Maxheap/MinHeap using arrays and recursion. (Heapify) def heapify(arr, n, i): largest = i # Initialize largest as root l = 2 * i + 1 # left = 2*i + 1 r = 2 * i + 2 # right = 2*i + 2 # If left child is larger than root if l &amp;lt; n and arr[l] &amp;gt; arr[largest]: largest = l # If right child is larger than largest so far if r &amp;lt; n and arr[r] &amp;gt; arr[largest]: largest = r # If largest is not root if largest !</description>
    </item>
    
    <item>
      <title>DSA in Python - Linked List</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/ll/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/ll/</guid>
      <description>Free Preview - 5 Linked List Problems Write a Program to reverse the Linked List. (Both Iterative and recursive) class Node: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def reverse(self): prev = None current = self.head while current is not None: next = current.next current.next = prev prev = current current = next self.head = prev # Function to insert a new node at the beginning def push(self, new_data): new_node = Node(new_data) new_node.</description>
    </item>
    
    <item>
      <title>DSA in Python - Matrix</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/matrix/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/matrix/</guid>
      <description>Free Preview - 5 Matrix Problems Spiral traversal on a Matrix def spiralOrder(matrix): ans = [] if (len(matrix) == 0): return ans m = len(matrix) n = len(matrix[0]) seen = [[0 for _ in range(n)] for _ in range(m)] dr = [0, 1, 0, -1] dc = [1, 0, -1, 0] x = 0 y = 0 di = 0 # Iterate from 0 to R * C - 1 for _ in range(m * n): ans.</description>
    </item>
    
    <item>
      <title>DSA in Python - Search and Sort</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/search-and-sort/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/search-and-sort/</guid>
      <description>Free Preview - 5 Search and Sort Problems Bubble Sort def bubble_sort(array): n=len(array) for i in range(n): for j in range(n-i-1): if array[j] &amp;gt; array[j + 1]: array[j], array[j + 1] = array[j + 1], array[j] array=[5,2,3,1,4, -99, 0] bubble_sort(array) print(array) Selection Sort def selection_sort(array): global iterations iterations = 0 for i in range(len(array)): minimum_index = i for j in range(i + 1, len(array)): iterations += 1 if array[minimum_index] &amp;gt; array[j]: minimum_index = j # Swap the found minimum element with the first element if minimum_index !</description>
    </item>
    
    <item>
      <title>DSA in Python - Stacks and Queues</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/stack-and-queue/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/stack-and-queue/</guid>
      <description>Free Preview - 5 Stack and Queue Problems Implement Stack from Scratch class Stack: def __init__(self, size): self.arr = [None] * size self.capacity = size self.top = -1 def push(self, val): if self.isFull(): print(&amp;#39;Stack Overflow!! Calling exit()‚Ä¶&amp;#39;) exit(-1) print(f&amp;#39;Inserting {val} into the stack‚Ä¶&amp;#39;) self.top = self.top + 1 self.arr[self.top] = val def pop(self): if self.isEmpty(): print(&amp;#39;Stack Underflow!! Calling exit()‚Ä¶&amp;#39;) exit(-1) print(f&amp;#39;Removing {self.peek()} from the stack&amp;#39;) # decrease stack size by 1 and (optionally) return the popped element top = self.</description>
    </item>
    
    <item>
      <title>DSA in Python - Strings</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/string/</link>
      <pubDate>Sat, 09 Jul 2022 13:14:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/string/</guid>
      <description>Free Preview - 5 String Problems Check whether a String is Palindrome or not def isPalindrome(s): return s == s[::-1] s = &amp;#34;malayalam&amp;#34; ans = isPalindrome(s) if ans: print(&amp;#34;Yes&amp;#34;) else: print(&amp;#34;No&amp;#34;) Find Duplicate characters in a string def printDups(Str): count = {} for i in range(len(Str)): if(Str[i] in count): count[Str[i]] += 1 else: count[Str[i]] = 1 #increase the count of characters by 1 for it,it2 in count.items(): #iterating through the unordered map if (it2 &amp;gt; 1): #if the count of characters is greater then 1 then duplicate found print(str(it) + &amp;#34;, count = &amp;#34;+str(it2)) Str = &amp;#34;test string&amp;#34; printDups(Str) Write a Code to check whether one string is a rotation of another def check_rotation(s, goal): if (len(s) !</description>
    </item>
    
    <item>
      <title>DSA in Python - Binary Search Trees</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/binary-search-tree/</link>
      <pubDate>Sat, 09 Jul 2022 13:10:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/binary-search-tree/</guid>
      <description>Free Preview - 5 Binary Search Tree Problems Find a value in a BST class Node: def __init__(self, data, left=None, right=None): self.data = data self.left = left self.right = right # Recursive function to insert a key into a BST def insert(root, key): # if the root is None, create a new node and return it if root is None: return Node(key) # if the given key is less than the root node, recur for the left subtree if key &amp;lt; root.</description>
    </item>
    
    <item>
      <title>DSA in Python - Binary Trees</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/binary-tree/</link>
      <pubDate>Fri, 08 Jul 2022 13:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/binary-tree/</guid>
      <description>Free Preview - 5 Binary Tree Problems Level order traversal AKA BFS class Node: def __init__(self, key): self.data = key self.left = None self.right = None def printLevelOrder(root): # Base Case if root is None: return # Create an empty queue for level order traversal queue = [] # Enqueue Root and initialize height queue.append(root) while(len(queue) &amp;gt; 0): # Print front of queue and remove it from queue print(queue[0].data) node = queue.</description>
    </item>
    
    <item>
      <title>DSA in Python - Trie</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/trie/</link>
      <pubDate>Fri, 08 Jul 2022 13:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/trie/</guid>
      <description>Free Preview - 5 Trie Problems Construct a trie from scratch class TrieNode: def __init__(self): self.children = [None]*26 # isEndOfWord is True if node represent the end of the word self.isEndOfWord = False class Trie: def __init__(self): self.root = self.getNode() def getNode(self): # Returns new trie node (initialized to NULLs) return TrieNode() def _charToIndex(self,ch): # private helper function. # Converts key current character into index use only &amp;#39;a&amp;#39; through &amp;#39;z&amp;#39; and lower case return ord(ch)-ord(&amp;#39;a&amp;#39;) def insert(self,key): # If not present, inserts key into trie # If the key is prefix of trie node, just marks leaf node pCrawl = self.</description>
    </item>
    
    <item>
      <title>DSA in Python - Arrays</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/arrays/</link>
      <pubDate>Thu, 07 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/arrays/</guid>
      <description>Free Preview - 5 Array Problems Reverse the array def reverseArray(A: list): start, end= 0, len(A)-1 while start&amp;lt;end: A[start], A[end]= A[end], A[start] start+=1 end-=1 A=[1,54,21,51,2,353,2,1,99,121,5,5] reverseArray(A) print(&amp;#34;After reversing:&amp;#34;, A) Find the maximum and minimum element in an array def getMinMax(arr: list, n: int): min = 0 max = 0 # If there is only one element then return it as min and max both if n == 1: max = arr[0] min = arr[0] return min, max # If there are more than one elements, then initialize min # and max if arr[0] &amp;gt; arr[1]: max = arr[0] min = arr[1] else: max = arr[1] min = arr[0] for i in range(2, n): if arr[i] &amp;gt; max: max = arr[i] elif arr[i] &amp;lt; min: min = arr[i] return min, max # Driver Code if __name__ == &amp;#34;__main__&amp;#34;: arr = [1000, 11, 445, 1, 330, 3000] arr_size = 6 min, max = getMinMax(arr, arr_size) print(&amp;#34;Minimum element is&amp;#34;, min) print(&amp;#34;Maximum element is&amp;#34;, max) Find the &amp;ldquo;Kth&amp;rdquo; max and min element of an array import sys # function to calculate number of elements less than equal to mid def count(nums, mid): cnt = 0 for i in range(len(nums)): if nums[i] &amp;lt;= mid: cnt += 1 return cnt def kthSmallest(nums, k): low = sys.</description>
    </item>
    
    <item>
      <title>DSA in Python - Backtracking</title>
      <link>https://atharvashah.netlify.app/posts/tech/dsapython/backtracking/</link>
      <pubDate>Thu, 07 Jul 2022 23:18:34 +0530</pubDate>
      
      <guid>https://atharvashah.netlify.app/posts/tech/dsapython/backtracking/</guid>
      <description>Free Preview - 5 Backtracking Problems Rat in a maze Problem &amp;#34;&amp;#34;&amp;#34; N = 4 m[][] = {{1, 0, 0, 0}, {1, 1, 0, 1}, {1, 1, 0, 0}, {0, 1, 1, 1}} Output: DDRDRR DRDDRR Explanation: The rat can reach the destination at (3, 3) from (0, 0) by two paths - DRDDRR and DDRDRR, when printed in sorted order we get DDRDRR DRDDRR. &amp;#34;&amp;#34;&amp;#34; def setup(): global v v = [[0 for i in range(100)] for j in range(100)] global ans ans = [] def path(arr, x, y, pth, n): if x==n-1 and y==n-1: global ans ans.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://atharvashah.netlify.app/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://atharvashah.netlify.app/about/</guid>
      <description>Get to know me better</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://atharvashah.netlify.app/privacy-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://atharvashah.netlify.app/privacy-policy/</guid>
      <description>Privacy Policy</description>
    </item>
    
    
    
  </channel>
</rss>
